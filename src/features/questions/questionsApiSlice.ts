// Need to use the React-specific entry point to import `createApi`
import { createApi, fetchBaseQuery } from "@reduxjs/toolkit/query/react";
import type { QuestionsApiResponse } from "../../types/questions";

// {"response_code":0,"response_message":"Token Generated Successfully!","token":"32e8d33842280ad78e1f2b05f41804c80a8ad22de3c2daa2a176bd0b7f3171fd"}
// https://opentdb.com/api_token.php?command=request
// Define a service using a base URL and expected endpoints
// https://opentdb.com/api.php?amount=10&difficulty=medium&type=multiple
// https://opentdb.com/api.php?amount=10&category=10&difficulty=medium&type=multiple
export const questionsApiSlice = createApi({
    baseQuery: fetchBaseQuery({ baseUrl: "data" }),
    reducerPath: "questionsApi",
    // Tag types are used for caching and invalidation.
    tagTypes: ["Questions", "trivia_categories"],
    endpoints: build => ({
        // Supply generics for the return type (in this case `QuotesApiResponse`)
        // and the expected query argument. If there is no argument, use `void`
        // for the argument type instead.
        // getQuestions: build.query<QuestionsApiResponse, { amount: number, currentCatId:number, difficulty:Dificulty, sessionToken: string|undefined }>({
        //     query: ({ amount = 10, currentCatId, difficulty = 'any', sessionToken }) => 
        //         `api.php?type=multiple&amount=${amount}
        //             ${difficulty !== 'any' ? `&difficulty=${difficulty}`: ''}
        //                 ${currentCatId !== 9 ? `&category=${currentCatId}`: ''}
        //                     &token=${sessionToken}`.replace(/ /g,''),
        //     providesTags: (result, error) => [{ type: "Questions"}],
        // }),

        getQuestions: build.query<QuestionsApiResponse, {subject:string,  currentCatId:string}>({
            query: ({currentCatId, subject}) => 
                `${subject}\\${currentCatId}-questions.json`,
            providesTags: () => [{ type: "Questions"}],
        }),


        // getGategories: build.query<CategoriesResponse, void>({
        //     query: () => "api_category.php",
        //     providesTags: (result, error, id) => [{ type: "trivia_categories" }],
        // }),

        // https://opentdb.com/api_category.php
    }),
})

// Hooks are auto-generated by RTK-Query
// Same as `quotesApiSlice.endpoints.getQuotes.useQuery`
export const { useGetQuestionsQuery } = questionsApiSlice


// function logData<T>(data: T): T {
//     console.log(data);
//     return data;
//   }
//   const result = logData({}); 